// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the redpanda package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'redpanda';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * Redpanda client token. You need either `accessToken`, or both `clientId` and `clientSecret` to use this provider. Can
     * also be set with the `REDPANDA_ACCESS_TOKEN` environment variable.
     */
    public readonly accessToken!: pulumi.Output<string | undefined>;
    /**
     * Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_CLIENT_ID or
     * ARM_CLIENT_ID
     */
    public readonly azureClientId!: pulumi.Output<string | undefined>;
    /**
     * Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_CLIENT_SECRET
     * or ARM_CLIENT_SECRET
     */
    public readonly azureClientSecret!: pulumi.Output<string | undefined>;
    /**
     * The default Azure Subscription ID which should be used for Redpanda BYOC clusters. If another subscription is specified
     * on a resource, it will take precedence. This can also be sourced from the `ARM_SUBSCRIPTION_ID` environment variable.
     */
    public readonly azureSubscriptionId!: pulumi.Output<string | undefined>;
    /**
     * Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_TENANT_ID or
     * ARM_TENANT_ID
     */
    public readonly azureTenantId!: pulumi.Output<string | undefined>;
    /**
     * The ID for the client. You need either `clientId` AND `clientSecret`, or `accessToken`, to use this provider. Can also
     * be set with the `REDPANDA_CLIENT_ID` environment variable.
     */
    public readonly clientId!: pulumi.Output<string | undefined>;
    /**
     * Redpanda client secret. You need either `clientId` AND `clientSecret`, or `accessToken`, to use this provider. Can also
     * be set with the `REDPANDA_CLIENT_SECRET` environment variable.
     */
    public readonly clientSecret!: pulumi.Output<string | undefined>;
    /**
     * The default Google Cloud Project ID to use for Redpanda BYOC clusters. If another project is specified on a resource, it
     * will take precedence. This can also be sourced from the `GOOGLE_PROJECT` environment variable, or any of the following
     * ordered by precedence: `GOOGLE_PROJECT`, `GOOGLE_CLOUD_PROJECT`, `GCLOUD_PROJECT`, or `CLOUDSDK_CORE_PROJECT`.
     */
    public readonly gcpProjectId!: pulumi.Output<string | undefined>;
    /**
     * Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as GOOGLE_CREDENTIALS
     */
    public readonly googleCredentials!: pulumi.Output<string | undefined>;
    /**
     * Used for creating and managing BYOC and BYOVPC clusters. Is a convenience passthrough for base64 encoded credentials
     * intended for use in CI/CD. Can also be specified in the environment as GOOGLE_CREDENTIALS_BASE64
     */
    public readonly googleCredentialsBase64!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["accessToken"] = args?.accessToken ? pulumi.secret(args.accessToken) : undefined;
            resourceInputs["azureClientId"] = args ? args.azureClientId : undefined;
            resourceInputs["azureClientSecret"] = args ? args.azureClientSecret : undefined;
            resourceInputs["azureSubscriptionId"] = args ? args.azureSubscriptionId : undefined;
            resourceInputs["azureTenantId"] = args ? args.azureTenantId : undefined;
            resourceInputs["clientId"] = args?.clientId ? pulumi.secret(args.clientId) : undefined;
            resourceInputs["clientSecret"] = args?.clientSecret ? pulumi.secret(args.clientSecret) : undefined;
            resourceInputs["gcpProjectId"] = args ? args.gcpProjectId : undefined;
            resourceInputs["googleCredentials"] = args ? args.googleCredentials : undefined;
            resourceInputs["googleCredentialsBase64"] = args ? args.googleCredentialsBase64 : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accessToken", "clientId", "clientSecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Provider.__pulumiType, name, resourceInputs, opts);
    }

    /**
     * This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
     */
    terraformConfig(): pulumi.Output<Provider.TerraformConfigResult> {
        return pulumi.runtime.call("pulumi:providers:redpanda/terraformConfig", {
            "__self__": this,
        }, this);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * Redpanda client token. You need either `accessToken`, or both `clientId` and `clientSecret` to use this provider. Can
     * also be set with the `REDPANDA_ACCESS_TOKEN` environment variable.
     */
    accessToken?: pulumi.Input<string>;
    /**
     * Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_CLIENT_ID or
     * ARM_CLIENT_ID
     */
    azureClientId?: pulumi.Input<string>;
    /**
     * Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_CLIENT_SECRET
     * or ARM_CLIENT_SECRET
     */
    azureClientSecret?: pulumi.Input<string>;
    /**
     * The default Azure Subscription ID which should be used for Redpanda BYOC clusters. If another subscription is specified
     * on a resource, it will take precedence. This can also be sourced from the `ARM_SUBSCRIPTION_ID` environment variable.
     */
    azureSubscriptionId?: pulumi.Input<string>;
    /**
     * Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_TENANT_ID or
     * ARM_TENANT_ID
     */
    azureTenantId?: pulumi.Input<string>;
    /**
     * The ID for the client. You need either `clientId` AND `clientSecret`, or `accessToken`, to use this provider. Can also
     * be set with the `REDPANDA_CLIENT_ID` environment variable.
     */
    clientId?: pulumi.Input<string>;
    /**
     * Redpanda client secret. You need either `clientId` AND `clientSecret`, or `accessToken`, to use this provider. Can also
     * be set with the `REDPANDA_CLIENT_SECRET` environment variable.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The default Google Cloud Project ID to use for Redpanda BYOC clusters. If another project is specified on a resource, it
     * will take precedence. This can also be sourced from the `GOOGLE_PROJECT` environment variable, or any of the following
     * ordered by precedence: `GOOGLE_PROJECT`, `GOOGLE_CLOUD_PROJECT`, `GCLOUD_PROJECT`, or `CLOUDSDK_CORE_PROJECT`.
     */
    gcpProjectId?: pulumi.Input<string>;
    /**
     * Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as GOOGLE_CREDENTIALS
     */
    googleCredentials?: pulumi.Input<string>;
    /**
     * Used for creating and managing BYOC and BYOVPC clusters. Is a convenience passthrough for base64 encoded credentials
     * intended for use in CI/CD. Can also be specified in the environment as GOOGLE_CREDENTIALS_BASE64
     */
    googleCredentialsBase64?: pulumi.Input<string>;
}

export namespace Provider {
    /**
     * The results of the Provider.terraformConfig method.
     */
    export interface TerraformConfigResult {
        readonly result: {[key: string]: any};
    }

}
