// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ClusterAwsPrivateLink {
    /**
     * The ARN of the principals that can access the Redpanda AWS PrivateLink Endpoint Service. To grant permissions to all principals, use an asterisk (*).
     */
    allowedPrincipals: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether Console is connected via PrivateLink.
     */
    connectConsole: pulumi.Input<boolean>;
    /**
     * Whether AWS PrivateLink is enabled.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Current status of the PrivateLink configuration.
     */
    status?: pulumi.Input<inputs.ClusterAwsPrivateLinkStatus>;
}

export interface ClusterAwsPrivateLinkStatus {
    /**
     * Port for Redpanda Console.
     */
    consolePort?: pulumi.Input<number>;
    /**
     * When the PrivateLink service was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * When the PrivateLink service was deleted.
     */
    deletedAt?: pulumi.Input<string>;
    /**
     * Base port for Kafka API nodes.
     */
    kafkaApiNodeBasePort?: pulumi.Input<number>;
    /**
     * Port for Kafka API seed brokers.
     */
    kafkaApiSeedPort?: pulumi.Input<number>;
    /**
     * Base port for HTTP proxy nodes.
     */
    redpandaProxyNodeBasePort?: pulumi.Input<number>;
    /**
     * Port for HTTP proxy.
     */
    redpandaProxySeedPort?: pulumi.Input<number>;
    /**
     * Port for Schema Registry.
     */
    schemaRegistrySeedPort?: pulumi.Input<number>;
    /**
     * The PrivateLink service ID.
     */
    serviceId?: pulumi.Input<string>;
    /**
     * The PrivateLink service name.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Current state of the PrivateLink service.
     */
    serviceState?: pulumi.Input<string>;
    /**
     * List of VPC endpoint connections.
     */
    vpcEndpointConnections?: pulumi.Input<pulumi.Input<inputs.ClusterAwsPrivateLinkStatusVpcEndpointConnection>[]>;
}

export interface ClusterAwsPrivateLinkStatusVpcEndpointConnection {
    /**
     * The connection ID.
     */
    connectionId?: pulumi.Input<string>;
    /**
     * When the endpoint connection was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * DNS entries for the endpoint.
     */
    dnsEntries?: pulumi.Input<pulumi.Input<inputs.ClusterAwsPrivateLinkStatusVpcEndpointConnectionDnsEntry>[]>;
    /**
     * The endpoint connection ID.
     */
    id?: pulumi.Input<string>;
    /**
     * ARNs of associated load balancers.
     */
    loadBalancerArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Owner of the endpoint connection.
     */
    owner?: pulumi.Input<string>;
    /**
     * State of the endpoint connection.
     */
    state?: pulumi.Input<string>;
}

export interface ClusterAwsPrivateLinkStatusVpcEndpointConnectionDnsEntry {
    /**
     * The DNS name.
     */
    dnsName?: pulumi.Input<string>;
    /**
     * The hosted zone ID.
     */
    hostedZoneId?: pulumi.Input<string>;
}

export interface ClusterAzurePrivateLink {
    /**
     * The subscriptions that can access the Redpanda Azure PrivateLink Endpoint Service. To grant permissions to all principals, use an asterisk (*).
     */
    allowedSubscriptions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether Console is connected in Redpanda Azure Private Link Service.
     */
    connectConsole: pulumi.Input<boolean>;
    /**
     * Whether Redpanda Azure Private Link Endpoint Service is enabled.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Current status of the Private Link configuration.
     */
    status?: pulumi.Input<inputs.ClusterAzurePrivateLinkStatus>;
}

export interface ClusterAzurePrivateLinkStatus {
    /**
     * List of approved Azure subscription IDs.
     */
    approvedSubscriptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Port for Redpanda Console.
     */
    consolePort?: pulumi.Input<number>;
    /**
     * When the Private Link service was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * When the Private Link service was deleted.
     */
    deletedAt?: pulumi.Input<string>;
    /**
     * DNS A record for the service.
     */
    dnsARecord?: pulumi.Input<string>;
    /**
     * Base port for Kafka API nodes.
     */
    kafkaApiNodeBasePort?: pulumi.Input<number>;
    /**
     * Port for Kafka API seed brokers.
     */
    kafkaApiSeedPort?: pulumi.Input<number>;
    /**
     * List of private endpoint connections.
     */
    privateEndpointConnections?: pulumi.Input<pulumi.Input<inputs.ClusterAzurePrivateLinkStatusPrivateEndpointConnection>[]>;
    /**
     * Base port for HTTP proxy nodes.
     */
    redpandaProxyNodeBasePort?: pulumi.Input<number>;
    /**
     * Port for HTTP proxy.
     */
    redpandaProxySeedPort?: pulumi.Input<number>;
    /**
     * Port for Schema Registry.
     */
    schemaRegistrySeedPort?: pulumi.Input<number>;
    /**
     * The Private Link service ID.
     */
    serviceId?: pulumi.Input<string>;
    /**
     * The Private Link service name.
     */
    serviceName?: pulumi.Input<string>;
}

export interface ClusterAzurePrivateLinkStatusPrivateEndpointConnection {
    /**
     * ID of the connection.
     */
    connectionId?: pulumi.Input<string>;
    /**
     * Name of the connection.
     */
    connectionName?: pulumi.Input<string>;
    /**
     * When the endpoint connection was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * ID of the private endpoint.
     */
    privateEndpointId?: pulumi.Input<string>;
    /**
     * Name of the private endpoint.
     */
    privateEndpointName?: pulumi.Input<string>;
    /**
     * Status of the endpoint connection.
     */
    status?: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResources {
    aws?: pulumi.Input<inputs.ClusterCustomerManagedResourcesAws>;
    gcp?: pulumi.Input<inputs.ClusterCustomerManagedResourcesGcp>;
}

export interface ClusterCustomerManagedResourcesAws {
    agentInstanceProfile: pulumi.Input<inputs.ClusterCustomerManagedResourcesAwsAgentInstanceProfile>;
    cloudStorageBucket: pulumi.Input<inputs.ClusterCustomerManagedResourcesAwsCloudStorageBucket>;
    clusterSecurityGroup: pulumi.Input<inputs.ClusterCustomerManagedResourcesAwsClusterSecurityGroup>;
    connectorsNodeGroupInstanceProfile: pulumi.Input<inputs.ClusterCustomerManagedResourcesAwsConnectorsNodeGroupInstanceProfile>;
    connectorsSecurityGroup: pulumi.Input<inputs.ClusterCustomerManagedResourcesAwsConnectorsSecurityGroup>;
    k8sClusterRole: pulumi.Input<inputs.ClusterCustomerManagedResourcesAwsK8sClusterRole>;
    nodeSecurityGroup: pulumi.Input<inputs.ClusterCustomerManagedResourcesAwsNodeSecurityGroup>;
    permissionsBoundaryPolicy: pulumi.Input<inputs.ClusterCustomerManagedResourcesAwsPermissionsBoundaryPolicy>;
    redpandaAgentSecurityGroup: pulumi.Input<inputs.ClusterCustomerManagedResourcesAwsRedpandaAgentSecurityGroup>;
    redpandaNodeGroupInstanceProfile: pulumi.Input<inputs.ClusterCustomerManagedResourcesAwsRedpandaNodeGroupInstanceProfile>;
    redpandaNodeGroupSecurityGroup: pulumi.Input<inputs.ClusterCustomerManagedResourcesAwsRedpandaNodeGroupSecurityGroup>;
    utilityNodeGroupInstanceProfile: pulumi.Input<inputs.ClusterCustomerManagedResourcesAwsUtilityNodeGroupInstanceProfile>;
    utilitySecurityGroup: pulumi.Input<inputs.ClusterCustomerManagedResourcesAwsUtilitySecurityGroup>;
}

export interface ClusterCustomerManagedResourcesAwsAgentInstanceProfile {
    /**
     * ARN for the agent instance profile
     */
    arn: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesAwsCloudStorageBucket {
    /**
     * ARN for the cloud storage bucket
     */
    arn: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesAwsClusterSecurityGroup {
    /**
     * ARN for the cluster security group
     */
    arn: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesAwsConnectorsNodeGroupInstanceProfile {
    /**
     * ARN for the connectors node group instance profile
     */
    arn: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesAwsConnectorsSecurityGroup {
    /**
     * ARN for the connectors security group
     */
    arn: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesAwsK8sClusterRole {
    /**
     * ARN for the Kubernetes cluster role
     */
    arn: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesAwsNodeSecurityGroup {
    /**
     * ARN for the node security group
     */
    arn: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesAwsPermissionsBoundaryPolicy {
    /**
     * ARN for the permissions boundary policy
     */
    arn: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesAwsRedpandaAgentSecurityGroup {
    /**
     * ARN for the redpanda agent security group
     */
    arn: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesAwsRedpandaNodeGroupInstanceProfile {
    /**
     * ARN for the redpanda node group instance profile
     */
    arn: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesAwsRedpandaNodeGroupSecurityGroup {
    /**
     * ARN for the redpanda node group security group
     */
    arn: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesAwsUtilityNodeGroupInstanceProfile {
    /**
     * ARN for the utility node group instance profile
     */
    arn: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesAwsUtilitySecurityGroup {
    /**
     * ARN for the utility security group
     */
    arn: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesGcp {
    /**
     * GCP service account for the agent.
     */
    agentServiceAccount: pulumi.Input<inputs.ClusterCustomerManagedResourcesGcpAgentServiceAccount>;
    /**
     * GCP service account for managed connectors.
     */
    connectorServiceAccount: pulumi.Input<inputs.ClusterCustomerManagedResourcesGcpConnectorServiceAccount>;
    /**
     * GCP service account for Redpanda Console.
     */
    consoleServiceAccount: pulumi.Input<inputs.ClusterCustomerManagedResourcesGcpConsoleServiceAccount>;
    /**
     * GCP service account for GCP Kubernetes Engine (GKE).
     */
    gkeServiceAccount: pulumi.Input<inputs.ClusterCustomerManagedResourcesGcpGkeServiceAccount>;
    /**
     * NAT subnet name if GCP Private Service Connect is enabled.
     */
    pscNatSubnetName?: pulumi.Input<string>;
    /**
     * GCP service account for the Redpanda cluster.
     */
    redpandaClusterServiceAccount: pulumi.Input<inputs.ClusterCustomerManagedResourcesGcpRedpandaClusterServiceAccount>;
    /**
     * GCP subnet where Redpanda cluster is deployed.
     */
    subnet: pulumi.Input<inputs.ClusterCustomerManagedResourcesGcpSubnet>;
    /**
     * GCP storage bucket for Tiered storage.
     */
    tieredStorageBucket: pulumi.Input<inputs.ClusterCustomerManagedResourcesGcpTieredStorageBucket>;
}

export interface ClusterCustomerManagedResourcesGcpAgentServiceAccount {
    /**
     * GCP service account email.
     */
    email: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesGcpConnectorServiceAccount {
    /**
     * GCP service account email.
     */
    email: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesGcpConsoleServiceAccount {
    /**
     * GCP service account email.
     */
    email: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesGcpGkeServiceAccount {
    /**
     * GCP service account email.
     */
    email: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesGcpRedpandaClusterServiceAccount {
    /**
     * GCP service account email.
     */
    email: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesGcpSubnet {
    /**
     * Kubernetes Master IPv4 range, e.g. 10.0.0.0/24.
     */
    k8sMasterIpv4Range: pulumi.Input<string>;
    /**
     * Subnet name.
     */
    name: pulumi.Input<string>;
    /**
     * Secondary IPv4 range for pods.
     */
    secondaryIpv4RangePods: pulumi.Input<inputs.ClusterCustomerManagedResourcesGcpSubnetSecondaryIpv4RangePods>;
    /**
     * Secondary IPv4 range for services.
     */
    secondaryIpv4RangeServices: pulumi.Input<inputs.ClusterCustomerManagedResourcesGcpSubnetSecondaryIpv4RangeServices>;
}

export interface ClusterCustomerManagedResourcesGcpSubnetSecondaryIpv4RangePods {
    /**
     * Secondary IPv4 range name for pods.
     */
    name: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesGcpSubnetSecondaryIpv4RangeServices {
    /**
     * Secondary IPv4 range name for services.
     */
    name: pulumi.Input<string>;
}

export interface ClusterCustomerManagedResourcesGcpTieredStorageBucket {
    /**
     * GCP storage bucket name.
     */
    name: pulumi.Input<string>;
}

export interface ClusterGcpPrivateServiceConnect {
    /**
     * List of consumers that are allowed to connect to Redpanda GCP PSC (Private Service Connect) service attachment.
     */
    consumerAcceptLists: pulumi.Input<pulumi.Input<inputs.ClusterGcpPrivateServiceConnectConsumerAcceptList>[]>;
    /**
     * Whether Redpanda GCP Private Service Connect is enabled.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Whether global access is enabled.
     */
    globalAccessEnabled: pulumi.Input<boolean>;
    /**
     * Current status of the Private Service Connect configuration.
     */
    status?: pulumi.Input<inputs.ClusterGcpPrivateServiceConnectStatus>;
}

export interface ClusterGcpPrivateServiceConnectConsumerAcceptList {
    /**
     * Either the GCP project number or its alphanumeric ID.
     */
    source: pulumi.Input<string>;
}

export interface ClusterGcpPrivateServiceConnectStatus {
    /**
     * List of connected endpoints.
     */
    connectedEndpoints?: pulumi.Input<pulumi.Input<inputs.ClusterGcpPrivateServiceConnectStatusConnectedEndpoint>[]>;
    /**
     * When the Private Service Connect service was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * When the Private Service Connect service was deleted.
     */
    deletedAt?: pulumi.Input<string>;
    /**
     * DNS A records for the service.
     */
    dnsARecords?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Base port for Kafka API nodes.
     */
    kafkaApiNodeBasePort?: pulumi.Input<number>;
    /**
     * Port for Kafka API seed brokers.
     */
    kafkaApiSeedPort?: pulumi.Input<number>;
    /**
     * Base port for HTTP proxy nodes.
     */
    redpandaProxyNodeBasePort?: pulumi.Input<number>;
    /**
     * Port for HTTP proxy.
     */
    redpandaProxySeedPort?: pulumi.Input<number>;
    /**
     * Port for Schema Registry.
     */
    schemaRegistrySeedPort?: pulumi.Input<number>;
    /**
     * Hostname for the seed brokers.
     */
    seedHostname?: pulumi.Input<string>;
    /**
     * The service attachment identifier.
     */
    serviceAttachment?: pulumi.Input<string>;
}

export interface ClusterGcpPrivateServiceConnectStatusConnectedEndpoint {
    /**
     * The connection ID.
     */
    connectionId?: pulumi.Input<string>;
    /**
     * The consumer network.
     */
    consumerNetwork?: pulumi.Input<string>;
    /**
     * The endpoint address.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * Status of the endpoint connection.
     */
    status?: pulumi.Input<string>;
}

export interface ClusterHttpProxy {
    /**
     * mTLS configuration.
     */
    mtls?: pulumi.Input<inputs.ClusterHttpProxyMtls>;
    /**
     * The HTTP Proxy URL.
     */
    url?: pulumi.Input<string>;
}

export interface ClusterHttpProxyMtls {
    /**
     * CA certificate in PEM format.
     */
    caCertificatesPems?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether mTLS is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Principal mapping rules for mTLS authentication. See the Redpanda documentation on configuring authentication.
     */
    principalMappingRules?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ClusterKafkaApi {
    /**
     * mTLS configuration.
     */
    mtls?: pulumi.Input<inputs.ClusterKafkaApiMtls>;
    /**
     * List of Kafka broker addresses.
     */
    seedBrokers?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ClusterKafkaApiMtls {
    /**
     * CA certificate in PEM format.
     */
    caCertificatesPems?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether mTLS is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Principal mapping rules for mTLS authentication. See the Redpanda documentation on configuring authentication.
     */
    principalMappingRules?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ClusterKafkaConnect {
    /**
     * Whether Kafka Connect is enabled.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface ClusterMaintenanceWindowConfig {
    /**
     * If true, maintenance can occur at any time.
     */
    anytime?: pulumi.Input<boolean>;
    dayHour?: pulumi.Input<inputs.ClusterMaintenanceWindowConfigDayHour>;
    /**
     * If true, maintenance window is unspecified.
     */
    unspecified?: pulumi.Input<boolean>;
}

export interface ClusterMaintenanceWindowConfigDayHour {
    /**
     * Day of week.
     */
    dayOfWeek?: pulumi.Input<string>;
    /**
     * Hour of day.
     */
    hourOfDay?: pulumi.Input<number>;
}

export interface ClusterPrometheus {
    /**
     * The Prometheus metrics endpoint URL.
     */
    url?: pulumi.Input<string>;
}

export interface ClusterRedpandaConsole {
    /**
     * The Redpanda Console URL.
     */
    url?: pulumi.Input<string>;
}

export interface ClusterSchemaRegistry {
    /**
     * mTLS configuration.
     */
    mtls?: pulumi.Input<inputs.ClusterSchemaRegistryMtls>;
    /**
     * The Schema Registry URL.
     */
    url?: pulumi.Input<string>;
}

export interface ClusterSchemaRegistryMtls {
    /**
     * CA certificate in PEM format.
     */
    caCertificatesPems?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether mTLS is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Principal mapping rules for mTLS authentication. See the Redpanda documentation on configuring authentication.
     */
    principalMappingRules?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ClusterStateDescription {
    /**
     * Error code if cluster is in error state.
     */
    code?: pulumi.Input<number>;
    /**
     * Detailed error message if cluster is in error state.
     */
    message?: pulumi.Input<string>;
}

export interface NetworkCustomerManagedResources {
    aws?: pulumi.Input<inputs.NetworkCustomerManagedResourcesAws>;
    gcp?: pulumi.Input<inputs.NetworkCustomerManagedResourcesGcp>;
}

export interface NetworkCustomerManagedResourcesAws {
    dynamodbTable: pulumi.Input<inputs.NetworkCustomerManagedResourcesAwsDynamodbTable>;
    managementBucket: pulumi.Input<inputs.NetworkCustomerManagedResourcesAwsManagementBucket>;
    privateSubnets: pulumi.Input<inputs.NetworkCustomerManagedResourcesAwsPrivateSubnets>;
    vpc: pulumi.Input<inputs.NetworkCustomerManagedResourcesAwsVpc>;
}

export interface NetworkCustomerManagedResourcesAwsDynamodbTable {
    /**
     * AWS DynamoDB table identifier
     */
    arn: pulumi.Input<string>;
}

export interface NetworkCustomerManagedResourcesAwsManagementBucket {
    /**
     * AWS storage bucket identifier
     */
    arn: pulumi.Input<string>;
}

export interface NetworkCustomerManagedResourcesAwsPrivateSubnets {
    /**
     * AWS private subnet identifiers
     */
    arns: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkCustomerManagedResourcesAwsVpc {
    /**
     * AWS VPC identifier
     */
    arn: pulumi.Input<string>;
}

export interface NetworkCustomerManagedResourcesGcp {
    managementBucket: pulumi.Input<inputs.NetworkCustomerManagedResourcesGcpManagementBucket>;
    /**
     * Name of user-created network where the Redpanda cluster is deployed
     */
    networkName: pulumi.Input<string>;
    /**
     * GCP project ID where the network is created
     */
    networkProjectId: pulumi.Input<string>;
}

export interface NetworkCustomerManagedResourcesGcpManagementBucket {
    /**
     * GCP storage bucket name for storing the state of Redpanda cluster deployment
     */
    name: pulumi.Input<string>;
}
