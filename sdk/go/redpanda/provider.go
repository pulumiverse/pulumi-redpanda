// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redpanda

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-redpanda/sdk/go/redpanda/internal"
)

// The provider type for the redpanda package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState

	// Redpanda client token. You need either `accessToken`, or both `clientId` and `clientSecret` to use this provider. Can
	// also be set with the `REDPANDA_ACCESS_TOKEN` environment variable.
	AccessToken pulumi.StringPtrOutput `pulumi:"accessToken"`
	// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_CLIENT_ID or
	// ARM_CLIENT_ID
	AzureClientId pulumi.StringPtrOutput `pulumi:"azureClientId"`
	// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_CLIENT_SECRET
	// or ARM_CLIENT_SECRET
	AzureClientSecret pulumi.StringPtrOutput `pulumi:"azureClientSecret"`
	// The default Azure Subscription ID which should be used for Redpanda BYOC clusters. If another subscription is specified
	// on a resource, it will take precedence. This can also be sourced from the `ARM_SUBSCRIPTION_ID` environment variable.
	AzureSubscriptionId pulumi.StringPtrOutput `pulumi:"azureSubscriptionId"`
	// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_TENANT_ID or
	// ARM_TENANT_ID
	AzureTenantId pulumi.StringPtrOutput `pulumi:"azureTenantId"`
	// The ID for the client. You need either `clientId` AND `clientSecret`, or `accessToken`, to use this provider. Can also
	// be set with the `REDPANDA_CLIENT_ID` environment variable.
	ClientId pulumi.StringPtrOutput `pulumi:"clientId"`
	// Redpanda client secret. You need either `clientId` AND `clientSecret`, or `accessToken`, to use this provider. Can also
	// be set with the `REDPANDA_CLIENT_SECRET` environment variable.
	ClientSecret pulumi.StringPtrOutput `pulumi:"clientSecret"`
	// The default Google Cloud Project ID to use for Redpanda BYOC clusters. If another project is specified on a resource, it
	// will take precedence. This can also be sourced from the `GOOGLE_PROJECT` environment variable, or any of the following
	// ordered by precedence: `GOOGLE_PROJECT`, `GOOGLE_CLOUD_PROJECT`, `GCLOUD_PROJECT`, or `CLOUDSDK_CORE_PROJECT`.
	GcpProjectId pulumi.StringPtrOutput `pulumi:"gcpProjectId"`
	// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as GOOGLE_CREDENTIALS
	GoogleCredentials pulumi.StringPtrOutput `pulumi:"googleCredentials"`
	// Used for creating and managing BYOC and BYOVPC clusters. Is a convenience passthrough for base64 encoded credentials
	// intended for use in CI/CD. Can also be specified in the environment as GOOGLE_CREDENTIALS_BASE64
	GoogleCredentialsBase64 pulumi.StringPtrOutput `pulumi:"googleCredentialsBase64"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	if args.AccessToken != nil {
		args.AccessToken = pulumi.ToSecret(args.AccessToken).(pulumi.StringPtrInput)
	}
	if args.ClientId != nil {
		args.ClientId = pulumi.ToSecret(args.ClientId).(pulumi.StringPtrInput)
	}
	if args.ClientSecret != nil {
		args.ClientSecret = pulumi.ToSecret(args.ClientSecret).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"accessToken",
		"clientId",
		"clientSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:redpanda", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// Redpanda client token. You need either `accessToken`, or both `clientId` and `clientSecret` to use this provider. Can
	// also be set with the `REDPANDA_ACCESS_TOKEN` environment variable.
	AccessToken *string `pulumi:"accessToken"`
	// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_CLIENT_ID or
	// ARM_CLIENT_ID
	AzureClientId *string `pulumi:"azureClientId"`
	// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_CLIENT_SECRET
	// or ARM_CLIENT_SECRET
	AzureClientSecret *string `pulumi:"azureClientSecret"`
	// The default Azure Subscription ID which should be used for Redpanda BYOC clusters. If another subscription is specified
	// on a resource, it will take precedence. This can also be sourced from the `ARM_SUBSCRIPTION_ID` environment variable.
	AzureSubscriptionId *string `pulumi:"azureSubscriptionId"`
	// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_TENANT_ID or
	// ARM_TENANT_ID
	AzureTenantId *string `pulumi:"azureTenantId"`
	// The ID for the client. You need either `clientId` AND `clientSecret`, or `accessToken`, to use this provider. Can also
	// be set with the `REDPANDA_CLIENT_ID` environment variable.
	ClientId *string `pulumi:"clientId"`
	// Redpanda client secret. You need either `clientId` AND `clientSecret`, or `accessToken`, to use this provider. Can also
	// be set with the `REDPANDA_CLIENT_SECRET` environment variable.
	ClientSecret *string `pulumi:"clientSecret"`
	// The default Google Cloud Project ID to use for Redpanda BYOC clusters. If another project is specified on a resource, it
	// will take precedence. This can also be sourced from the `GOOGLE_PROJECT` environment variable, or any of the following
	// ordered by precedence: `GOOGLE_PROJECT`, `GOOGLE_CLOUD_PROJECT`, `GCLOUD_PROJECT`, or `CLOUDSDK_CORE_PROJECT`.
	GcpProjectId *string `pulumi:"gcpProjectId"`
	// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as GOOGLE_CREDENTIALS
	GoogleCredentials *string `pulumi:"googleCredentials"`
	// Used for creating and managing BYOC and BYOVPC clusters. Is a convenience passthrough for base64 encoded credentials
	// intended for use in CI/CD. Can also be specified in the environment as GOOGLE_CREDENTIALS_BASE64
	GoogleCredentialsBase64 *string `pulumi:"googleCredentialsBase64"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// Redpanda client token. You need either `accessToken`, or both `clientId` and `clientSecret` to use this provider. Can
	// also be set with the `REDPANDA_ACCESS_TOKEN` environment variable.
	AccessToken pulumi.StringPtrInput
	// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_CLIENT_ID or
	// ARM_CLIENT_ID
	AzureClientId pulumi.StringPtrInput
	// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_CLIENT_SECRET
	// or ARM_CLIENT_SECRET
	AzureClientSecret pulumi.StringPtrInput
	// The default Azure Subscription ID which should be used for Redpanda BYOC clusters. If another subscription is specified
	// on a resource, it will take precedence. This can also be sourced from the `ARM_SUBSCRIPTION_ID` environment variable.
	AzureSubscriptionId pulumi.StringPtrInput
	// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_TENANT_ID or
	// ARM_TENANT_ID
	AzureTenantId pulumi.StringPtrInput
	// The ID for the client. You need either `clientId` AND `clientSecret`, or `accessToken`, to use this provider. Can also
	// be set with the `REDPANDA_CLIENT_ID` environment variable.
	ClientId pulumi.StringPtrInput
	// Redpanda client secret. You need either `clientId` AND `clientSecret`, or `accessToken`, to use this provider. Can also
	// be set with the `REDPANDA_CLIENT_SECRET` environment variable.
	ClientSecret pulumi.StringPtrInput
	// The default Google Cloud Project ID to use for Redpanda BYOC clusters. If another project is specified on a resource, it
	// will take precedence. This can also be sourced from the `GOOGLE_PROJECT` environment variable, or any of the following
	// ordered by precedence: `GOOGLE_PROJECT`, `GOOGLE_CLOUD_PROJECT`, `GCLOUD_PROJECT`, or `CLOUDSDK_CORE_PROJECT`.
	GcpProjectId pulumi.StringPtrInput
	// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as GOOGLE_CREDENTIALS
	GoogleCredentials pulumi.StringPtrInput
	// Used for creating and managing BYOC and BYOVPC clusters. Is a convenience passthrough for base64 encoded credentials
	// intended for use in CI/CD. Can also be specified in the environment as GOOGLE_CREDENTIALS_BASE64
	GoogleCredentialsBase64 pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

// This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
func (r *Provider) TerraformConfig(ctx *pulumi.Context) (ProviderTerraformConfigResultOutput, error) {
	out, err := ctx.Call("pulumi:providers:redpanda/terraformConfig", nil, ProviderTerraformConfigResultOutput{}, r)
	if err != nil {
		return ProviderTerraformConfigResultOutput{}, err
	}
	return out.(ProviderTerraformConfigResultOutput), nil
}

type ProviderTerraformConfigResult struct {
	Result map[string]interface{} `pulumi:"result"`
}

type ProviderTerraformConfigResultOutput struct{ *pulumi.OutputState }

func (ProviderTerraformConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderTerraformConfigResult)(nil)).Elem()
}

func (o ProviderTerraformConfigResultOutput) Result() pulumi.MapOutput {
	return o.ApplyT(func(v ProviderTerraformConfigResult) map[string]interface{} { return v.Result }).(pulumi.MapOutput)
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

// Redpanda client token. You need either `accessToken`, or both `clientId` and `clientSecret` to use this provider. Can
// also be set with the `REDPANDA_ACCESS_TOKEN` environment variable.
func (o ProviderOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_CLIENT_ID or
// ARM_CLIENT_ID
func (o ProviderOutput) AzureClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AzureClientId }).(pulumi.StringPtrOutput)
}

// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_CLIENT_SECRET
// or ARM_CLIENT_SECRET
func (o ProviderOutput) AzureClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AzureClientSecret }).(pulumi.StringPtrOutput)
}

// The default Azure Subscription ID which should be used for Redpanda BYOC clusters. If another subscription is specified
// on a resource, it will take precedence. This can also be sourced from the `ARM_SUBSCRIPTION_ID` environment variable.
func (o ProviderOutput) AzureSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AzureSubscriptionId }).(pulumi.StringPtrOutput)
}

// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as AZURE_TENANT_ID or
// ARM_TENANT_ID
func (o ProviderOutput) AzureTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AzureTenantId }).(pulumi.StringPtrOutput)
}

// The ID for the client. You need either `clientId` AND `clientSecret`, or `accessToken`, to use this provider. Can also
// be set with the `REDPANDA_CLIENT_ID` environment variable.
func (o ProviderOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Redpanda client secret. You need either `clientId` AND `clientSecret`, or `accessToken`, to use this provider. Can also
// be set with the `REDPANDA_CLIENT_SECRET` environment variable.
func (o ProviderOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// The default Google Cloud Project ID to use for Redpanda BYOC clusters. If another project is specified on a resource, it
// will take precedence. This can also be sourced from the `GOOGLE_PROJECT` environment variable, or any of the following
// ordered by precedence: `GOOGLE_PROJECT`, `GOOGLE_CLOUD_PROJECT`, `GCLOUD_PROJECT`, or `CLOUDSDK_CORE_PROJECT`.
func (o ProviderOutput) GcpProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.GcpProjectId }).(pulumi.StringPtrOutput)
}

// Used for creating and managing BYOC and BYOVPC clusters. Can also be specified in the environment as GOOGLE_CREDENTIALS
func (o ProviderOutput) GoogleCredentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.GoogleCredentials }).(pulumi.StringPtrOutput)
}

// Used for creating and managing BYOC and BYOVPC clusters. Is a convenience passthrough for base64 encoded credentials
// intended for use in CI/CD. Can also be specified in the environment as GOOGLE_CREDENTIALS_BASE64
func (o ProviderOutput) GoogleCredentialsBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.GoogleCredentialsBase64 }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
	pulumi.RegisterOutputType(ProviderTerraformConfigResultOutput{})
}
