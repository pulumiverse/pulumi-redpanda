// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redpanda

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-redpanda/sdk/go/redpanda/internal"
)

// Data source for a Redpanda Cloud network
//
// ## Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-redpanda/sdk/go/redpanda"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := redpanda.LookupNetwork(ctx, &redpanda.LookupNetworkArgs{
//				Id: "network_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNetwork(ctx *pulumi.Context, args *LookupNetworkArgs, opts ...pulumi.InvokeOption) (*LookupNetworkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkResult
	err := ctx.Invoke("redpanda:index/getNetwork:getNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetwork.
type LookupNetworkArgs struct {
	// UUID of the network
	Id string `pulumi:"id"`
}

// A collection of values returned by getNetwork.
type LookupNetworkResult struct {
	// The cidrBlock to create the network in
	CidrBlock string `pulumi:"cidrBlock"`
	// The cloud provider to create the network in. Can also be set at the provider level
	CloudProvider string `pulumi:"cloudProvider"`
	// The type of cluster this network is associated with, can be one of dedicated or cloud
	ClusterType              string                             `pulumi:"clusterType"`
	CustomerManagedResources GetNetworkCustomerManagedResources `pulumi:"customerManagedResources"`
	// UUID of the network
	Id string `pulumi:"id"`
	// Name of the network
	Name string `pulumi:"name"`
	// The region to create the network in. Can also be set at the provider level
	Region string `pulumi:"region"`
	// The ID of the resource group in which to create the network
	ResourceGroupId string `pulumi:"resourceGroupId"`
}

func LookupNetworkOutput(ctx *pulumi.Context, args LookupNetworkOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetworkResultOutput, error) {
			args := v.(LookupNetworkArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("redpanda:index/getNetwork:getNetwork", args, LookupNetworkResultOutput{}, options).(LookupNetworkResultOutput), nil
		}).(LookupNetworkResultOutput)
}

// A collection of arguments for invoking getNetwork.
type LookupNetworkOutputArgs struct {
	// UUID of the network
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupNetworkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkArgs)(nil)).Elem()
}

// A collection of values returned by getNetwork.
type LookupNetworkResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkResult)(nil)).Elem()
}

func (o LookupNetworkResultOutput) ToLookupNetworkResultOutput() LookupNetworkResultOutput {
	return o
}

func (o LookupNetworkResultOutput) ToLookupNetworkResultOutputWithContext(ctx context.Context) LookupNetworkResultOutput {
	return o
}

// The cidrBlock to create the network in
func (o LookupNetworkResultOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The cloud provider to create the network in. Can also be set at the provider level
func (o LookupNetworkResultOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// The type of cluster this network is associated with, can be one of dedicated or cloud
func (o LookupNetworkResultOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.ClusterType }).(pulumi.StringOutput)
}

func (o LookupNetworkResultOutput) CustomerManagedResources() GetNetworkCustomerManagedResourcesOutput {
	return o.ApplyT(func(v LookupNetworkResult) GetNetworkCustomerManagedResources { return v.CustomerManagedResources }).(GetNetworkCustomerManagedResourcesOutput)
}

// UUID of the network
func (o LookupNetworkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the network
func (o LookupNetworkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.Name }).(pulumi.StringOutput)
}

// The region to create the network in. Can also be set at the provider level
func (o LookupNetworkResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.Region }).(pulumi.StringOutput)
}

// The ID of the resource group in which to create the network
func (o LookupNetworkResultOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkResultOutput{})
}
